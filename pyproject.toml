[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "iec104"
version = "0.1.0"
description = "Asynchrone IEC 60870-5-104 Implementierung"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Industrial Control", email = "engineering@example.com"}]
requires-python = ">=3.11"
dependencies = []
keywords = ["iec104", "protocol", "telecontrol", "asyncio"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Topic :: Communications",
  "Typing :: Typed"
]

[project.urls]
Homepage = "https://example.com/iec104"
Documentation = "https://example.com/iec104/docs"
Repository = "https://example.com/iec104/repo"

[project.optional-dependencies]
docs = ["sphinx>=7.0"]
dev = [
  "pytest>=7.4",
  "pytest-asyncio>=0.21",
  "hypothesis>=6.88",
  "sphinx>=7.0",
  "mypy>=1.6",
  "ruff>=0.1.0",
  "black>=23.9",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP", "RUF100"]
ignore = []

[tool.ruff.lint.per-file-ignores]
"docs/conf.py" = ["E402"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict = true
mypy_path = "src"

[tool.pytest.ini_options]
addopts = "-ra --showlocals"
testpaths = ["tests"]

